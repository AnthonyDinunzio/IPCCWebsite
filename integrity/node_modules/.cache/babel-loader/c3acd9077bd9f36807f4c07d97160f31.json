{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\Desktop\\\\Intengrity\\\\integrity\\\\src\\\\components\\\\Database.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Dropdown } from 'react-bootstrap';\nconst Database = () => {\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState('');\n  const [records, setRecords] = useState([]);\n\n  // Fetch tables from the database on component mount\n  useEffect(() => {\n    // Fetch tables logic (an example)\n    // This should fetch all tables from your backend and set them to the state\n    // Replace this with your actual fetching mechanism\n    const fetchedTables = ['EmailForms', 'AnotherTable']; // Example tables\n    setTables(fetchedTables);\n  }, []);\n\n  // Fetch records for the selected table\n  useEffect(() => {\n    if (selectedTable) {\n      // Fetch records for the selected table logic\n      // This should fetch records based on the selected table and set them to the state\n      // Replace this with your actual fetching mechanism\n      const fetchedRecords = []; // Example fetched records\n      setRecords(fetchedRecords);\n    }\n  }, [selectedTable]);\n  const handleTableSelect = tableName => {\n    setSelectedTable(tableName);\n    // Perform logic to fetch records for the selected table\n    // For example, trigger an API call to fetch records based on the selected table\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Select Table\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, tables.map((table, index) => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    key: index,\n    onClick: () => handleTableSelect(table),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, table)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"crud-operations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, records.map((record, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, record.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, record.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, record.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Edit\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Delete\")))))), /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\nexport default Database;","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Dropdown","Database","tables","setTables","selectedTable","setSelectedTable","records","setRecords","fetchedTables","fetchedRecords","handleTableSelect","tableName","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","id","Menu","map","table","index","Item","key","onClick","striped","bordered","hover","record","name","email"],"sources":["C:/Users/antho/Desktop/Intengrity/integrity/src/components/Database.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Dropdown } from 'react-bootstrap';\r\n\r\nconst Database = () => {\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState('');\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // Fetch tables from the database on component mount\r\n  useEffect(() => {\r\n    // Fetch tables logic (an example)\r\n    // This should fetch all tables from your backend and set them to the state\r\n    // Replace this with your actual fetching mechanism\r\n    const fetchedTables = ['EmailForms', 'AnotherTable']; // Example tables\r\n    setTables(fetchedTables);\r\n  }, []);\r\n\r\n  // Fetch records for the selected table\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      // Fetch records for the selected table logic\r\n      // This should fetch records based on the selected table and set them to the state\r\n      // Replace this with your actual fetching mechanism\r\n      const fetchedRecords = []; // Example fetched records\r\n      setRecords(fetchedRecords);\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  const handleTableSelect = (tableName) => {\r\n    setSelectedTable(tableName);\r\n    // Perform logic to fetch records for the selected table\r\n    // For example, trigger an API call to fetch records based on the selected table\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Table Selector */}\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          Select Table\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {tables.map((table, index) => (\r\n            <Dropdown.Item key={index} onClick={() => handleTableSelect(table)}>\r\n              {table}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {/* CRUD Operations Section */}\r\n      <div className=\"crud-operations\">\r\n        {/* Add, Edit, Delete operations */}\r\n        {/* ... */}\r\n      </div>\r\n\r\n      {/* Table with Records */}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            {/* Table headers based on the selected table */}\r\n            {/* Example: For EmailForms table */}\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            {/* ... other columns */}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Records displayed here */}\r\n          {records.map((record, index) => (\r\n            <tr key={index}>\r\n              {/* Table data based on the selected table */}\r\n              {/* Example: For EmailForms table */}\r\n              <td>{record.id}</td>\r\n              <td>{record.name}</td>\r\n              <td>{record.email}</td>\r\n              {/* ... other data */}\r\n              <td>\r\n                <Button variant=\"primary\">Edit</Button>{' '}\r\n                <Button variant=\"danger\">Delete</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Modal for Add/Edit form */}\r\n      <Modal>\r\n        <Form>\r\n          {/* Form fields for adding/editing records */}\r\n          {/* ... */}\r\n          <Button variant=\"primary\">Submit</Button>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Database;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}